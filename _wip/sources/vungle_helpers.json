{"vungle_helpers":{"sounds":[],"source":{"scripts":{"vungle_helpers.lua":"-- =============================================================\n-- Vungle Helpers Module - Generated by EAT Lean/Fat\n-- EAT Lean - https://gumroad.com/l/eatlean\n-- EAT Fat  - https://gumroad.com/l/EATFrameOneTime\n-- =============================================================\n-- vungle_helpers.lua\n-- =============================================================\n--[[\n\n   Includes these functions:\n\n   vungle_helpers.setID( os, id ) - Set an id manually (do before init if at all).\n   vungle_helpers.init( [delay] ) - Initialize ads with optional delay.\n   vungle_helpers.showInterstitial( [ params ] ] ) - Show normal video ad with optional params settings.\n   vungle_helpers.showIncentivized( [ params ] ] ) - Show incentivized video ad with optional params settings.\n   vungle_helpers.isAdAvailable( ) - Returns 'true' if ad is cached.\n\n--]]\n-- =============================================================\nlocal onSimulator    = ( system.getInfo( \"environment\" ) == \"simulator\" )\nlocal oniOS          = ( system.getInfo(\"platformName\") == \"iPhone OS\" )\nlocal onAndroid      = ( system.getInfo(\"platformName\") == \"Android\" )\nlocal onWinPhone     = ( system.getInfo(\"platformName\") == \"WinPhone\" )\nlocal onOSX          = ( system.getInfo(\"platformName\") == \"Mac OS X\" )\nlocal onAppleTV      = ( system.getInfo(\"platformName\") == \"tvOS\" )\nlocal onAndroidTV    = ( (system.getInfo(\"androidDisplayDensityName\") == \"tvdpi\") or\n                         (tostring(system.getInfo(\"androidDisplayApproximateDpi\")) == \"213\" ) )\nlocal onWin          = ( system.getInfo(\"platformName\") == \"Win\" )\nlocal onNook         = ( system.getInfo(\"targetAppStore\") == \"nook\" )\nlocal onAmazon       = ( system.getInfo(\"targetAppStore\") == \"amazon\" or\n                         ( string.find( system.getInfo(\"model\"), \"Fire\" ) ~= nil ) )\nlocal onDesktop      = ( ( onOSX or onWin ) and not onSimulator )\nlocal onDevice       = ( onAndroid or oniOS or onAppleTVOS or onAndroidTV  )\n-- =============================================================\n-- =============================================================\nlocal ads = require( \"ads\" )\n\n\nlocal vungle_helpers = {}\n\n-- ==\n--    Table of ids, separated by OS and type (banner or interstitial)\n-- ==\nlocal ids = \n{ \n   android = ANDROID_ID,\n   ios = IOS_ID,\n}\n\n\n-- ==\n--    Example Vungle Listener \n-- ==\nlocal function listener( event ) \n   -- Extract base set of useful event details:\n   local isError     = (event.isError == nil) and false or event.isError\n   local name        = (event.name == nil) and \"unknown\" or event.name\n   local eType       = (event.type == nil) and \"unknown\" or event.type\n   local provider    = (event.provider == nil) and \"unknown\" or event.provider\n\n   print(\"Vungle Listener Event @ \", system.getTimer )\n   print('isError: ' .. tostring( isError ) .. '; name == \"' .. tostring(name) .. '\"' .. '; evnt type == \"' .. tostring(eType) .. '\"' )\n\n   -- Do something with the above details...\n   --\n   if( isError ) then\n      print( \"Vungle is getting errors.\")\n      for k,v in pairs( event ) do\n         print(k,v)\n      end\n\n   else\n      if( name == \"adsRequest\" ) then\n\n         -- Tip: These are checked for in the typical order they happen:\n         --\n         if( eType == \"cachedAdAvailable\" ) then\n            print(\"We got an ad!  We should be ready to show it.\")\n        \n\n         elseif( eType == \"adStart\" ) then\n            print(\"Ad started playing!\")\n\n         elseif( eType == \"adView\" ) then\n            -- \n            -- This is part 1 of what you most care about!\n            --\n            local isCompletedView   = (event.isCompletedView == nil) and false or event.isCompletedView\n            local secondsWatched    = (event.secondsWatched == nil) and 0 or event.secondsWatched\n            local totalSeconds      = (event.secondsWatched == nil) and 0 or event.totalAdSeconds\n            local percentWatched    = (secondsWatched == 0 or totalSeconds == 0) and 0 or (secondsWatched/totalSeconds)\n\n\n            if( isCompletedView ) then\n               print(\"User watched entire video! \" .. tostring(isCompletedView) )\n            else           \n               print(\"User watched \" .. tostring( 100 * percent ) .. \"% of the video.\")\n            end\n\n            print(\"Video was \" .. tostring( totalSeconds) .. \" seconds long.\")\n\n\n         elseif( eType == \"adEnd\" ) then\n            -- \n            -- This is part 2 of what you most care about!\n            --\n            local wasCallToActionClicked  = (event.wasCallToActionClicked == nil) and false or event.wasCallToActionClicked\n\n            print(\"The ad ended!\")\n\n            if( wasCallToActionClicked ) then\n               print(\"The user clicked the ad, give them a reward here.\")\n            else\n\n               print(\"The user DID NOT click the ad.... no reward for them.\")\n            end\n         end\n\n      else\n         print( \"Vungle is getting a weird event.name value?! Turn on vungle module's debug output to see more details.\")\n      end\n\n   end\nend\n\n-- =============================================================\n-- setID( os, id ) - Set an id for a specific OS.\n--\n-- os - 'android' or 'ios'\n-- id - Must be a valid ID\n--\n-- =============================================================\nfunction vungle_helpers.setID( os, id )\n   ids[os] = id\nend\n\n\n-- =============================================================\n-- init( [ delay ] ) - Initilize adMob ad network.\n--                     If delay is specified, wait 'delay' ms then\n--                     initialize.\n--\n-- https://docs.coronalabs.com/daily/plugin/vungle/init.html\n-- =============================================================\nfunction vungle_helpers.init( delay )\n   -- Set default delay if not provided\n   delay = delay or 0 \n   \n   -- A function that we may call immediately or with a delay\n   -- to do the initialization work.\n   local function doInit()\n\n      -- Android\n      --\n      if( onAndroid and  ids.android ) then\n            ads.init( \"vungle\", ids.android, listener )\n\n      -- iOS (Apple)\n      --\n      elseif( oniOS and ids.ios ) then         \n            ads.init( \"vungle\", ids.ios, listener )\n\n      end\n\n   end\n\n   -- Initialize immediately or wait a little while?\n   --\n   if( delay < 1 ) then\n      doInit()\n   else\n      timer.performWithDelay( delay, doInit )\n   end\n\nend\n\n-- =============================================================\n-- showInterstitial( [ params ]) -- Show normal video ad with optional params settings.\n--\n-- params - Optional parameterized table of options (type)[default):\n--          > isAnimated (bool)[true], \n--          > isAutoRotation (bool)[true],\n--          > orientations - I am not clear on this setting,\n--          > isBackButtonEnabled (bool)[Android only: true],\n--          > isSoundEnabled(bool)[true],\n--          > username(string)(nil) - Only applies to \"incentivized ads\"\n--\n-- https://docs.coronalabs.com/daily/plugin/vungle/show.html\n-- =============================================================\nfunction vungle_helpers.showInterstitial( params )\n   params = params or {}\n\n   -- Set provider to vungle\n   ads:setCurrentProvider(\"vungle\")\n\n   ads.show( \"interstitial\", params )\nend\n\n-- =============================================================\n-- showIncentivized( [ params ]) -- Show normal video ad with optional params settings.\n--\n-- params - Optional parameterized table of options (type)[default):\n--          > isAnimated (bool)[true], \n--          > isAutoRotation (bool)[true],\n--          > orientations - I am not clear on this setting,\n--          > isBackButtonEnabled (bool)[Android only: true],\n--          > isSoundEnabled(bool)[true],\n--          > username(string)(nil) - Only applies to \"incentivized ads\"\n--\n-- https://docs.coronalabs.com/daily/plugin/vungle/show.html\n-- =============================================================\nfunction vungle_helpers.showIncentivized( params )\n   params = params or {}\n\n   -- Set provider to vungle\n   ads:setCurrentProvider(\"vungle\")\n\n   ads.show( \"incentivized\", params )\nend\n\n-- =============================================================\n-- isAdAvailable() -- Returns true if ad is cached.\n--\n-- https://docs.coronalabs.com/daily/plugin/vungle/isAdAvailable.html\n-- =============================================================\nfunction vungle_helpers.isAdAvailable( )\n\n   -- Set provider to vungle\n   ads:setCurrentProvider(\"vungle\")\n\n   return ( ads.isAdAvailable() )\nend\n\n\nreturn vungle_helpers"}},"name":"vungle_helpers","images":[]}}